import logging
import asyncio
from googletrans import Translator
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# Включаем логирование для отладки
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(name)

# Создаем экземпляр переводчика
translator = Translator()

# Функция для старта
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(
        "Привет! Я бот для перевода текста. Отправь мне текст на русском или португальском языке, "
        "и я переведу его на другой язык."
    )

# Функция для обработки текстовых сообщений
async def translate_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_text = update.message.text

    # Определяем язык исходного текста
    detected_lang = translator.detect(user_text).lang

    if detected_lang == 'ru':
        # Если текст на русском, переводим на португальский
        translated = translator.translate(user_text, src='ru', dest='pt')
        await update.message.reply_text(f"Переведено на португальский: {translated.text}")
    elif detected_lang == 'pt':
        # Если текст на португальском, переводим на русский
        translated = translator.translate(user_text, src='pt', dest='ru')
        await update.message.reply_text(f"Переведено на русский: {translated.text}")
    else:
        # Если текст на другом языке
        await update.message.reply_text(
            "Я могу переводить только с русского и на русский, а также с португальского и на португальский."
        )

# Функция для обработки НЕ-текстовых сообщений
async def handle_non_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text("❌ Пожалуйста, отправьте текстовое сообщение для перевода.")

# Основная функция для запуска бота
async def main() -> None:
    token = '7422428959:AAHjaAqByYCsahDrYMhuNZw_C6-U2S3gqTg'

    # Создаем объект Application и передаем ему токен
    application = ApplicationBuilder().token(token).build()

    # Команда /start
    application.add_handler(CommandHandler("start", start))

    # Обработчик текстовых сообщений (исключая команды)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, translate_text))

    # Обработчик ВСЕХ НЕ-текстовых сообщений (стикеры, фото и т.д.)
    application.add_handler(MessageHandler(~filters.TEXT & ~filters.COMMAND, handle_non_text))

    # Запускаем бота
    await application.run_polling()

if name == 'main':
    asyncio.run(main())
